import static org.hamcrest.CoreMatchers.*;
import static org.junit.matchers.JUnitMatchers.*;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.junit.rules.ExpectedException;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Ignore;
import org.junit.Rule;
import org.junit.After;
import org.junit.AfterClass;

import com.accenture.junit.InvalidGoalException;
import com.accenture.junit.TrackingService;
import static org.junit.Assert.*;

public class TrackingServiceTest {
	
	private TrackingService trackingService;
	
	@BeforeClass
	public static void before(){
		System.out.println("> Before Class ");
	}
	
	@AfterClass
	public static void after(){
		System.out.println("\n> After Class ");
	}
	
	@Before
	public void setUp(){
		System.out.println("\n-> Before Test Method ");
		trackingService = new TrackingService();		
	}
	
	@After
	public void tearDown(){
		System.out.println("-> Before Test Method ");		
	}
	
	@Test
	@Category(CategoryTest.class)
	public void newTrackingServiceTotalIsZero(){
		System.out.println("--> newTrackingServiceTotalIsZero");
		assertEquals("Tracking service total was not zero", 0, trackingService.getTotal());
	}
	
	@Test
	@Ignore
	public void whenAddingProteinTotalIncreasesByThatAmount(){	
		System.out.println("--> whenAddingProteinTotalIncreasesByThatAmount");
		trackingService.addProtein(10);
		assertEquals(10, trackingService.getTotal());
		assertThat(trackingService.getTotal(), is(10));
		assertThat(trackingService.getTotal(), allOf(is(10), instanceOf(Integer.class)));
	}
	
	@Test
	@Category({CategoryTest.class, BadCategoryTest.class})
	public void whenRemovingProteinTotalRemainsZero(){		
		System.out.println("--> whenRemovingProteinTotalRemainsZero");
		trackingService.removeProtein(5);
		assertEquals(0, trackingService.getTotal());
	}

	@Rule
	public ExpectedException Thrown = ExpectedException.none(); 
	
	
	@Test(expected = InvalidGoalException.class)
	public void whenGoalIsSetToLessThanZeroExceptionIsThrown() throws InvalidGoalException{
		trackingService.setGoal(-5);
	}
	
	@Test(timeout = 200)
	public void testTimeOut(){
		for(int i=0; i< 100000001; i++){
			trackingService.addProtein(i);
		}
	}
}
